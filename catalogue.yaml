- name: catalogue
  hosts: catalogue
  become: yes
  tasks: 
  - name: disable old nodejs and enable nodejs:18
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: Installing nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: Adding application User  
    ansible.builtin.user:
     name: roboshop

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory 

  - name: Downloading application cose
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: Extracting code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: Installing Dependencies
    ansible.builtin.command: npm install 
    args:
      chdir: /app

  - name: Copying catalogue.service in systemd
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: Loading the service.
    ansible.builtin.systemd_service:    
      daemon_reload: true

  - name: Copying MongoDB repo file
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: Installing mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the categories count
    ansible.builtin.command: mongo --host mongodb.bhpr.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count 

  - name: load the catalogue data
    ansible.builtin.command: mongo --host mongodb.bhpr.online < /app/schema/catalogue.js      
    when: product_count.stdout == "0"

  - name: starting and enabling the service
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes       



    